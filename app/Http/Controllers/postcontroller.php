<?phpnamespace App\Http\Controllers;use App\Models\Comments;use Illuminate\Support\Facades\Auth;use App\Models\Like;use App\Models\Tag;use Illuminate\Http\Request;use App\Models\Post;use PhpParser\Comment;class postcontroller extends Controller{    public function getindex()    {        $posts = Post::orderBy('created_at', 'desc')->paginate(3);        return view('plains', ['posts' => $posts]);    }    public function getadminlist()    {        $posts = Post::orderBy('created_at', 'desc')->paginate(9);        return view('admin.listReport', ['posts' => $posts]);    }    public function getadminindex()    {        return view('admin.index');    }//    public function getadminlist(){//        return view('admin.listReport');////    }    public function getpost($id)    {        $posts = Post::all();        $post = Post::find($id);        $comments = Comments::where('post_id',$id)->get();        return view('detailsPost', ['post' => $post, 'posts' => $posts , 'comments'=>$comments ]);    }    public function getadmincreate()    {        $tags = Tag::all();        return view('admin.createReport', ['tags' => $tags]);    }//    public function getadminlist(){//        return view('admin.listReport');////    }    public function getadminedit($id)    {        $post = Post::find($id);        $tags = Tag::all();        return view('admin.edit', ['post' => $post], ['tags' => $tags]);    }    public function getadmindelete($id)    {        $post = Post::find($id);        $post->likes()->delete();        $post->delete();        return redirect()->route('admin.list')->with('info', 'succsessfully dele');    }    public function postadmincreate(Request $request)    {        $this->validate($request, ['title' => 'required|min:3',            'image' => 'required|mimes:jpg,jpeg,png,gif|max:10240'        ]);        $user = Auth::user();        if (!$user) {            return redirect()->back();        }        $address = '/post/' . date('Y') . '/' . date('m');        $destination = base_path() . '/public' . $address;        if (!is_dir($destination)) {            mkdir($destination, 0777, true);        }        $destination = $destination . '/';        $filename = rand(1111111, 99999999) . date('Y') . date('m') . '.' . $request->image->guessClientExtension();        $file = $request->file('image');        $file->move($destination, $filename);        $post = new Post([            'title' => $request->input('title'),            'image' => $address . '/' . $filename,            'content' => $request->input('content'),            'date' => $request->input('date'),            'location' => $request->input('location'),            'count' => $request->input('count'),            'time' => $request->input('time'),            'age' => $request->input('age')        ]);        $user->posts()->save($post);        $post->tags()->attach($request->input('tags') === null ? [] : $request->input('tags'));        return redirect()->route('admin.list')->with('info', 'post created successfully.title is' . $request->input('title'));    }    public function postadminupdate(Request $request)    {        $this->validate($request, ['title' => 'required|min:3',            'image' => 'required|mimes:jpg,jpeg,png,gif|max:10240'        ]);        $post = Post::find($request->input('id'));        $post->title = $request->input('title');        $post->content = $request->input('content');        $post->date = $request->input('date');        $post->location = $request->input('location');        $post->count = $request->input('count');        $post->time = $request->input('time');        $post->age = $request->input('age');        $address = '/post/' . date('Y') . '/' . date('m');        $destination = base_path() . '/public' . $address;        if (!is_dir($destination)) {            mkdir($destination, 0777, true);        }        $destination = $destination . '/';        $filename = rand(1111111, 99999999) . date('Y') . date('m') . '.' . $request->image->guessClientExtension();        $file = $request->file('image');        $file->move($destination, $filename);        $post->image = $address . '/' . $filename;        $post->save();        $post->tags()->detach();        $post->tags()->attach($request->input('tags') === null ? [] : $request->input('tags'));        return redirect()->route('admin.list')->with('info', 'post created successfully.title is' . $request->input('title'));    }    public function getlikepost($id)    {        $post = Post::where('id', $id)->first();        $like = new Like();        $post->likes()->save($like);        return redirect()->back();    }//comments    public function createPostComment(Request $request)    {        $this->validate($request, [            'name' => 'required',            'email' => 'email',            'message' => 'required'        ]);        $comments = new Comments([            'name' => $request->input('name'),            'email' => $request->input('email'),            'message' => $request->input('message'),            'post_id' => $request->input('post_id'),            'status' => 0        ]);        $comments->save();        return redirect()->back()->with('info', 'کامنت شما با موفقیت ارسال شد با تایید ادمین بر روی سایت نشان داده خواهد شد.');    }    public function getComment()    {        $posts = Post::all();        $comments = Comments::orderBy('created_at', 'desc')->paginate(9);        return view('admin.Comment', ['posts' => $posts, 'comments' => $comments]);    }    public function getadmincommentdelete($id)    {        $comment = Comments::find($id);        $comment->delete();        return redirect()->route('adminComments')->with('info', 'succsessfully dele');    }    public function accComment($id)    {        $comment = Comments::find($id);        $comment->status = 2;        $comment->save();        return redirect()->back()->with('info', 'کامنت منتشر شد');    }}